What happens when you initialize a repository? Why do you need to do it?

Initialising a repository tells git that it needs to track the directory contents.
Git now creates the meta-data and gets to work from now on.

How is the staging area different from the working directory and the repository? 
What value do you think it offers?

Staging area is a selection of files and not a directory or a whole record of directory.
Git needs to save changes made between different commits. Staging area allows one to 
save space by saving only a few files rather than all.

How can you use the staging area to make sure you have one commit per logical change?

Keep adding to staging area until you feel a logical change is complete.
One logical change may require changing more than one file.

What are some situations when branches would be helpful in keeping your history organized? 
How would branches help?

Branches allow the programmer to do experimental changes without any fear.

How do the diagrams help you visualize the branch structure?

The diagrams are useful. Everything can be viewed without clutter in a simple way.

What is the result of merging two branches together? Why do we represent 
it in the diagram the way we do?

Two people can now work on different portions independently. The representation is easy 
to understand and shows exactly how Git stores the information using pointers etc.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

When changes are huge and there are no conflicts, automatic merging saves a lot of time. 
In case of a conflict, automatic merging can lead to errors. Hence, manual merging is the 
only way to go.

